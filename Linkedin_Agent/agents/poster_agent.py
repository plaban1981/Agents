from crewai import Agent,LLM
from linkedin_api import Linkedin
from langchain.tools import Tool
import requests
import json
api_url = 'https://api.linkedin.com/v2/ugcPosts'
credentials = 'credentials.json'
#read credentials
def read_creds(filename):
    '''
    Store API credentials in a safe place.
    If you use Git, make sure to add the file to .gitignore
    '''
    with open(filename) as f:
        credentials = json.load(f)
    return credentials
#
access_token = read_creds(credentials)['access_token']
#
class PosterAgent:
    def __init__(self, linkedin_client,llm):
        self.linkedin_client = linkedin_client
        self.llm = llm

    def create(self):
        # Create a tool from the post_to_linkedin method
        posting_tool = Tool(
            name="Post to LinkedIn",
            func=self.post_to_linkedin,
            description="Posts content to LinkedIn platform"
        )

        return Agent(
            role='LinkedIn Poster',
            goal='Post reviwed content {content} generated by the reviewer_agent  to LinkedIn,provide the URL of the post and monitor engagement',
            backstory="""You are responsible for publishing content on LinkedIn 
            and ensuring it reaches the right audience.""",
            llm=self.llm,
            tools=[posting_tool],
            verbose=True
        )

    def post_to_linkedin(self, content: str) -> str:
        """Post content to LinkedIn"""
        headers = {
            'Authorization': f'Bearer {access_token}',
            'Connection': 'Keep-Alive',
            'Content-Type': 'application/json',
        }

        post_body = {
            'author': 'urn:li:person:kfW51gr4Ja',
            'lifecycleState': 'PUBLISHED',
            'specificContent': {
                'com.linkedin.ugc.ShareContent': {
                    'shareCommentary': {
                        'text': content['content'].raw + "\n\n This Post is created by AI Agent!!!!",
                    },
                    'shareMediaCategory': 'ARTICLE',
                    'media': [
                        {
                            'status': 'READY',
                            'description': {
                                'text': 'Read our latest blog post about LinkedIn API!',
                            },
                            'originalUrl': '<your_blog_post_url>',
                        },
                    ],
                },
            },
            'visibility': {
                'com.linkedin.ugc.MemberNetworkVisibility': 'PUBLIC',
            },
        }

        response = requests.post(api_url, headers=headers, json=post_body)
        if response.status_code == 201:
            print('Post successfully created!')
            return 'Post successfully created!'
        else:
            print(f'Post creation failed with status code {response.status_code}: {response.text}')
            return None
